
#--------------------------
# Indico configuration file
#--------------------------
#
# This file is read on Apache startup. If you change any value you will need to
# restart Apache afterwards to have its changes take effect.
#
# Lines starting with "#" are comments and they will be ignored by Indico.

#------------------------------------------------------------------------------
# ZODB
#------------------------------------------------------------------------------

DBConnectionParams   = ("localhost", 9675)
DBUserName           = ""
DBPassword           = ""
DBRealm              = ""

#------------------------------------------------------------------------------
# SQLAlchemy DB
#------------------------------------------------------------------------------

SQLAlchemyDatabaseURI  = 'postgresql://localhost/indico'

# Uncomment to echo requests
# SQLAlchemyEcho = True

# Uncomment if you wish to record queries
# SQLAlchemyRecordQueries = True

# Size of the connection pool (default = 5)
# SQLAlchemyPoolSize = 5

# Connection timeout
# SQLAlchemyPoolTimeout = 10

# Number of seconds after which a connection is automatically
# recycled (default = 120)
# SQLAlchemyPoolRecycle = 120

# Number of connections that can be breated after pool is at maximum
# size (default = 3)
# SQLAlchemyMaxOverflow = 3

#------------------------------------------------------------------------------
# REDIS
#------------------------------------------------------------------------------

# To enable redis, specify a valid redis connection string here.
# Example: redis://unused:password@localhost:6379/0
# You also need to install the python redis client (pip install redis hiredis)
# Note that the Redis server needs to run at least Redis 2.6 with LUA support.
#RedisConnectionURL = None

#------------------------------------------------------------------------------
# SECURITY
#------------------------------------------------------------------------------
# Possible values of SanitizationLevel:
#    0: Escape all HTML tags
#    1: Raise error if styles are used
#    2: Raise error if SCRIPT tag is used
#    3: No input filtering is done (DANGEROUS!)

SanitizationLevel    = 2

# AuthenticatedEnforceSecure controls whether HTTPS should be enforced for
# authentication and while logged in.
AuthenticatedEnforceSecure = "yes"

# Possible values of CSRFLevel:
#    0: Disable all CSRF checks (DANGEROUS!)
#    1: Check CSRF token for service requests
#    2: Check CSRF token for service requests and cookie-based API requests
#    3: The above & require an empty or valid referer for normal POST requests
CSRFLevel = 2

#------------------------------------------------------------------------------
# Development
#------------------------------------------------------------------------------
# Enable debug mode to get unminified assets, verbose error messages in the
# browser and various other things that are useful when developing indico or
# tracking down errors but should not be enabled for production systems.
#Debug = False
#
# You can force a certain number of (simulated) database conflicts on every
# by setting ForceConflicts to the number of conflict errors you want:
#ForceConflicts = 0
#
# You can cause all error-like exceptions (i.e. not something like AccessError)
# to be propagated outside the Indico WSGI app by enabling this option. This has
# the advantage of triggering the Werkzeug debugger of the embedded server even
# in case of e.g. a MaKaCError.
#PropagateAllExceptions = False

#------------------------------------------------------------------------------
# URLs
#------------------------------------------------------------------------------
# BaseURL is the url where Indico will be accessed:

BaseURL              = "http://localhost:8000"

# BaseSecureURL is the HTTPS location of Indico. Set empty string if you want to use http.

BaseSecureURL        = "https://localhost:8443"


# If you are using a custom user authentication system (see below) uncomment
# the following lines and specify the new URLs.
#
#   LoginURL             = ""
#   RegistrationURL      = ""

# Support the old mod_python-style URLs (conferenceDisplay.py?confId=123 etc.) by redirecting
# them to their new URL.
#RouteOldUrls = False


#------------------------------------------------------------------------------
# DIRECTORIES
#------------------------------------------------------------------------------
ArchiveDir           = "/opt/indico/archive"
BinDir               = "/opt/indico/bin"
ConfigurationDir     = "/opt/indico/etc"
DocumentationDir     = "/opt/indico/doc"
HtdocsDir            = "/opt/indico/htdocs"
LogDir               = "/opt/indico/log"
UploadedFilesTempDir = "/opt/indico/tmp"
XMLCacheDir          = "/opt/indico/cache"
# You can use 'redis', 'memcached' or 'files'. The files backend caches objects in
# XMLCacheDir while the Memcached backend uses one or more memcached servers.
#CacheBackend         = 'files'
# When using memcached, provide a tuple containing 'ip:port' entries for the
# memcached servers. Do not forget to firewall those servers as memcached has no
# authentication at all!
#MemcachedServers     = ('127.0.0.1:11211',)
# When using redis, provide a redis connection string for the Redis server.
#RedisCacheURL = 'redis://unused:password@localhost:6379/1'

#------------------------------------------------------------------------------
# SMTP
#------------------------------------------------------------------------------
SmtpServer           = ("localhost", 8025)
SmtpLogin            = ""
SmtpPassword         = ""

# If your SMTP server is using TLS write "yes", otherwise write "no"

SmtpUseTLS           = "no"

#------------------------------------------------------------------------------
# EMAIL ADDRESSES
#------------------------------------------------------------------------------
# SupportEmail is the email address where all automatically generated
# application errors will be sent to.

SupportEmail         = "root@localhost"


# PublicSupportEmail is an email address that will be shown in Indico and where
# users are expected to find help when they have using the website.

PublicSupportEmail   = "root@localhost"

# NoReplyEmail is the email address showed when we do not want the users to answer
# an automatically generated email.

NoReplyEmail	     = "noreply-root@localhost"


#------------------------------------------------------------------------------
# FILE UPLOAD
#------------------------------------------------------------------------------
# Here you can limit the maximum size of all the uploaded files (in MB) in a
# request
# default: 0 (unlimited)

MaxUploadFilesTotalSize = 0

# Here you can limit the maximum size of an uploaded file (in MB)
# default: 0 (unlimited)

MaxUploadFileSize = 0


#------------------------------------------------------------------------------
# FILE CONVERSION
#------------------------------------------------------------------------------
# Indico has an interface to interact with an external file conversion system
# to convert from some formats to others but right now there is no publicly
# available file conversion software.
#
# If you are interested in this feature please contact us at:
#   indico-team@cern.ch
#
# FileConverter        = {"conversion_server": "localhost", "response_url": "http://localhost/conversion-finished"}


#------------------------------------------------------------------------------
# AUTOMATIC MAINTENANCE
#------------------------------------------------------------------------------
# Indico can automatically delete events older than a specified number of days.
# This is set on a per-category basis:
#
# CategoryCleanup = {
#   '2': 30  # delete events in category '2' that have been created more than 30 days ago
# }
#
# If you want maintenance operations to be logged under a user other than the
# the server administrator (id 0), you can customize it here:
#
# JanitorUserId = 0

#------------------------------------------------------------------------------
# STATIC FILE DELIVERY
#------------------------------------------------------------------------------
# Indico supports the use of the X-Sendfile and X-Accel-Redirect headers:
#
# http://blog.lighttpd.net/articles/2006/07/02/x-sendfile
# http://wiki.nginx.org/X-accel
#
# If your webserver supports this feature and you want to activate it,
# you should enable it here
#
# X-Sendfile (apache with mod_xsendfile, lighttpd):
# StaticFileMethod = 'xsendfile'
#
# X-Accel-Redirect (nginx):
# StaticFileMethod = ('xaccelredirect', {
#     '/opt/indico/archive': '/.xsf/archive',
#     '/opt/indico/cache': '/.xsf/cache',
#     '/opt/indico/htdocs': '/.xsf/htdocs'
# })
# Because of the way nginx works (using URLs instead of paths) you also need to map the .xsf urls to
# the paths in your nginx config (for each entry in the dict above):
# location /.xsf/archive/ {
#     internal;
#     alias /opt/indico/archive/;
# }
# DO NOT forget the "internal;" statement - it prevents users from accessing those URLs directly.

#StaticFileMethod = None


#------------------------------------------------------------------------------
# AUTHENTICATION
#------------------------------------------------------------------------------
# Indico ships with a fully working user authentication system (Local) but you
# can use an external system.
#
# If you want to have all users authenticate only to an external user management
# system (for example: MyAuthSystem) you should write:
#
#     AuthenticatorList = [('MyAuthSystem', {})]
#
# Where the second element of the tuple is a dictionary with the configuration.
#
# If you want to authenticate users against more than one authentication system
# you can write them like this (systems will be queried about users from left
# to right):
#
#     AuthenticatorList = [('Local', {}), ('LDAP', {}), ('MyAuthSystem', {})]
#
# If you want to setup SSO in your authenticator you should setup the variable
# SSOActive to True.
#
# AuthenticatorList = [('MyAuthSystem', {'SSOActive': True})]
#
# You can also can configure the mapping of the SSO attributes with the variable SSOMapping. An example:
#
# AuthenticatorList = [ ('Local', {}),
#                        ('MyAuthSystem', {'SSOActive': True,
#                                          'LogoutCallbackURL': 'https://example.com/wsignout',
#                                          'SSOMapping': { 'email': 'ADFS_EMAIL',
#                                                           'login': 'ADFS_LOGIN',
#                                                           'personId': 'ADFS_PERSONID',
#                                                           'phone': 'ADFS_PHONENUMBER',
#                                                           'fax': 'ADFS_FAXNUMBER',
#                                                           'lastname': 'ADFS_LASTNAME',
#                                                           'firstname': 'ADFS_FIRSTNAME',
#                                                           'institute': 'ADFS_HOMEINSTITUTE'},
#                                          'ResetPasswordMessage': 'Please contact helpdesk or access this url: http://example.com'
#                                          })]
#
#
# Please note that some authentication systems may require extra dependency libs.
# For instance, for LDAP authentication, you will also need to install the python-ldap lib:
#
#  $ pip install python-ldap
#
#
# As an example if you want to setup the LDAP Authenticator you should define as following:
#
# AuthenticatorList  = [('LDAP', {# by default the port is 389 if you do not specify.
#                                 'uri': '[ldap|ldaps]://myldapserver.example.com:port',
#
#                                 # use TLS (do so, if your server allows)
#                                 'useTLS': True,
#
#                                 # filter parameters for users, base DN to use
#                                 'peopleDNQuery': ('uid={0}', 'DC=example,DC=com'),
#
#                                 # filter parameters for groups, base DN to use
#                                 'groupDNQuery': ('cn={0}', 'OU=Groups,DC=example,DC=com'),
#
#                                 # SLAPD or ActiveDirectory
#                                 'groupStyle': 'SLAPD',
#
#                                 # access credentials of a user with read access
#                                  'accessCredentials': ('CN=user,OU=Users,DC=example,DC=com','secret_password')
#
#                                 # custom user filter
#                                  'customUserFilter': "(objectCategory=user)"
#
#                                 # The LDAP record attribute that will be matched as the username for the login.
#                                 # (defaults to 'uid' if not specified)
#                                  'loginAttribute' : 'uid'
#                                 }
#
#
# The default configuration will use only Indico's authentication system.

AuthenticatorList = [('Local', {})]

# If you only want to allow users to login via SSO you can disable the normal login page.
# DisplayLoginPage = True

# Sessions are only stored for a certain time. You can modify the duration here. By setting
# the lifetime to 0 the cookie will expire when the browser is closed.
# SessionLifetime = 86400 * 31


#------------------------------------------------------------------------------
# LOGGING
#------------------------------------------------------------------------------
# Indico lets you log error messages using two methods:
#
#  * Simple log files (default)
#  * Sentry (https://github.com/getsentry/sentry)
#
# Loggers              = ['sentry', 'files']
# SentryDSN            = 'http://user:password@logger.example.com/n'
# SentryLoggingLevel   = 'ERROR'  # default: 'WARNING'


#------------------------------------------------------------------------------
# OFFLINE WEBSITE PACKAGES CREATION
#------------------------------------------------------------------------------
# Indico allows users to download their event so they can run it offline.
#
# The OfflineStore variable points to a directory that Indico will use to store
# the offline website packages.
#
# If the OfflineStore variable is not set, the functionality will be disabled.
#
# OfflineStore         = "/opt/indico/archive"


#------------------------------------------------------------------------------
# LATEX/PDF GENERATION
#------------------------------------------------------------------------------
# Set the path to pdflatex if it's not within PATH:
# PDFLatexProgram = 'pdflatex'
#
# In strict mode, a non-zero status code is considered failure. Disable this if
# you have old contributions that contain invalid LaTeX and you prefer possibly
# weird-looking PDFs over an error and no PDF at all.
# StrictLatex = True


#------------------------------------------------------------------------------
# OAUTH PARAMETERS
#------------------------------------------------------------------------------

# Time to live of the OAuth Tokens
OAuthAccessTokenTTL = 10000


#------------------------------------------------------------------------------
# INDICO MOBILE
#------------------------------------------------------------------------------

# If you have an installation of the mobile version of Indico, you can enable the
# notification that encourages its usage when the user accesses the Desktop Indico
# from a mobile device. One only needs to add the URL of Indico mobile here:
# MobileURL = "http://m.indico.your.domain"

#------------------------------------------------------------------------------
# ACTIVE PLUGINS
#------------------------------------------------------------------------------

# List of plugins to be loaded on server start.
#
# Plugins = {'example'}
